<<echo=FALSE>>=
library("survival", quietly=TRUE)
opts_chunk$set(comment=NA, tidy=FALSE, highlight=FALSE, echo=FALSE,
               fig.with=7, fig.height=5.5, fig.path="figures/",
               out.width="\\textwidth", out.height="!", device="pdf",
               cache=FALSE, background="#ffffff",
               warning=FALSE, error=FALSE, prompt=TRUE)
options(contrasts= c("contr.treatment", "contr.poly"),
        show.signif.starts = FALSE, continue=" ", width=60)
par(mar=c(4.1, 4.1, 1.1, 1.1))
load("nafld.rda")
library(hexbin, quietly=TRUE)
@ 

\section{Multiple disease states}
\begin{frame}
  {\Large Multiple disease states}
\end{frame}

\begin{frame}{NAFLD}
  \begin{itemize}
    \item Allen et.al, Non-aloholic fatty liver disease incidence and
      impact on metabolic burden and death, a 20 year community study.
      Hepatology 2018, 67:1726--1736.
    \item The prevalence of non-alcholic fatty liver disease (NASH) has
      risen to 24\%.
    \item Most common cause of chronic liver disease.
    \item Diagnosed with abdominal elastography.
    \item NASH = NAFLD + inflammation requires biopsy for diagnosis.
  \end{itemize}
\end{frame}

\begin{frame}{Study}
  \begin{itemize}
    \item All NAFLD diagnosis from 1997 to 2014 in Olmsted County, Minnesota.
    \item Utilize the Rochester Epidemiology Project
    \item One year delay.
    \item 4 controls matched on age and sex, then followed forward until the
    analysis date. 
    \pause
    \item 3869 cases of NAFLD and 15522 controls, 313 overlap.
  \end{itemize}
\end{frame}

\begin{frame}{Target}
<<nfig1>>=
states <- c("No comorbidity", "1 comorbidity", "2 comorbidities", 
            "3 comorbitities", "Death")
cmat <- matrix(0, 5,5)
cmat[,5] <- 1
cmat[1,2] <- cmat[2,3] <- cmat[3,4] <- 1
cmat[1,3] <- cmat[2,4] <- 1.6
cmat[1,4] <- 1.6
dimnames(cmat) <- list(states, states)
statefig(cbind(4,1), cmat)
@   
\end{frame}

\begin{frame}{Data}
  \begin{itemize}
    \item \code{nafld1}: One observation per subject.  Baseline covariates
      plus follow-up time and death.
    \item \code{nafld2}: Variables of id, days, test, and value.  Contains
      selected tests and clinical observations.
    \item \code{nafld3}: Variables of id, days, and event type.  One observation
      for each outcome: occurence of NASH, of hypertension, diabetes, etc.
    \item To anonymize patients, all dates have been replaced with ``days
      since first enrollment''.  
  \end{itemize}
\end{frame}

\begin{frame}{Data}
  \begin{itemize}
    \item Comorbidities are diabetes, hypertention, and dyslipiemia
    \item Focus on a model with 0, 1, 2, 3, of these + death
    \item The real work is in building and checking a data set,
      the fits will be easy.
  \end{itemize}
\end{frame}  

\begin{frame}
<<hplot>>=
hexbinplot(I(futime/365.25) ~ age, data=nafld1, colramp=rainbow,
           xlab="Age at entry", ylab="Years of follow-up")
@ 
\end{frame}

\begin{frame}{tmerge}
<<tmerge>>=
frame()
plot(c(0, 75), c(0,2), xlab="Time", ylab="", yaxt='n', type='n')
segments(c(10, 26, 34), c(1,1,1), c(18, 31, 65), c(1,1,1), lwd=2)
arrows(c(5, 15, 21, 26, 31, 70), rep(c(1.4, .6), 3), c(5, 15, 21, 26, 31, 70),
       rep(c(1.05, .95), 3), angle=20, length=.1)
text(c(5, 15, 21, 26, 31, 70), rep(c(1.5, .5), 3),
     c("early", "within", "gap", "leading", "trailing", "late"))
@ 
0\end{frame}

\begin{frame}[fragile]{R code}
<<echo=TRUE, size='scriptsize'>>=
keep <- c("id", "age", "male", "bmi", "ntime")
data1 <- tmerge(nafld1[, keep], nafld1, id,  
                death= event(futime, status))
data1 <- tmerge(data1, subset(nafld3, event=="nafld"), id,
                nafld = tdc(days))
data1 <- tmerge(data1, subset(nafld3, event=="diabetes"), id,
                diabetes= tdc(days), e1= event(days))
data1 <- tmerge(data1, subset(nafld3, event=="htn"), id, 
                htn= tdc(days), e2= event(days))
data1 <- tmerge(data1, subset(nafld3, event=="dyslipidemia"), id, 
                dyslipid = tdc(days), e3= event(days))
attr(data1, 'tcount')
@ 
\end{frame}

\begin{frame}[fragile] 
  \frametitle{Four row subject}
<<row4a, echo=TRUE>>= 
rowcount <- table(data1$id)
table(rowcount)    # pick someone with 4 rows
subset(data1, id == 17, c(id, age, tstart, tstop, nafld,
                     htn, diabetes, dyslipid, death))
@
\end{frame}

\begin{frame}{The \code{tmerge} function}
  \begin{itemize}
    \item The first call creates a time window for each subject.
      \begin{itemize}
        \item For subject 17, this is (0, 4596), ending with death/censored
        \item More complex time windows are supported.
      \end{itemize}
    \item Each subsequent call, and each term within a call, sequentially
      adds things into this window
      \begin{itemize}
        \item tdc: create a time dependent covariate
        \item cumtdc: a cumulative time dependent covariate
        \item event: create an event covariate
        \item cumevent: cumulative event covariate
      \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
<<row4aa>>=
subset(nafld3, id==17)
@ 
\end{frame}

\begin{frame}[fragile]
<<row4b, echo=TRUE, size="small">>=
test <- tmerge(nafld1[, 1:2], nafld1, id,
               death = event(futime, status))
attr(test, "tcount")
#
subset(test, id==17)
@ 
\end{frame}

\begin{frame}[fragile]
<<row4c, echo=TRUE, size="small">>=
test <- tmerge(nafld1[, 1:2], nafld1, id, 
               death = event(futime, status))
test <- tmerge(test, subset(nafld3, event=="nafld"), id,
               nafld = tdc(days))

attr(test, "tcount")
#
subset(test, id==17)
@ 
\end{frame}

\begin{frame}[fragile]
\small
<<row4d, echo=TRUE, size="small">>=
test <- tmerge(nafld1[, 1:2], nafld1, id, 
               death = event(futime, status))
test <- tmerge(test, subset(nafld3, event=="nafld"), id,
               naf = tdc(days))
test <- tmerge(test, subset(nafld3, event=="diabetes"), id,
                diab= tdc(days), e1= event(days))
attr(test, "tcount")
#
subset(test, id==17)
@ 
\end{frame}

\begin{frame}[fragile]
<<row4e, echo=TRUE, size="small">>=
test <- tmerge(test, subset(nafld3, event=="htn"), id,
                htn= tdc(days))
attr(test, "tcount")
#
subset(test, id==17)
@ 
\end{frame}

\begin{frame}[fragile]
<<row4f, echo=TRUE, size="small">>=
test <- tmerge(test, subset(nafld3, event=="dyslipidemia"), id,
                lip= tdc(days), e3= event(days))
attr(test, "tcount")
#
subset(test, id==17)
@ 
\end{frame}

\begin{frame}{Data}
  \begin{itemize}
    \item Use any software you want to create the data set, 
      the key is correct \emph{data}.
    \item Internal rules for \code{tmerge} 
      \begin{itemize}
        \item If a covariate changes at time $t$, its new value only affects
          events that happen after time $t$, not at or before $t$. 
        \item Sometimes we need to delay a covariate (multi-day visits,
          diltiazem study).
        \item Events happen at the end of intervals, covariates change at
          the beginning.  
        \item What should happen for data outside the observation range?
          \begin{itemize}
            \item changes before an interval change the covariate in the
              interval, but do not extend the range of an interval
            \item events outside an observation interval are ignored
          \end{itemize}
      \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}
  \begin{quote}
    In any sufficiently large sample, any outrageous thing is likely to happen.
    P. Diconis and Mosteller, Method of studying coincidences, JASA 1989.
  \end{quote}
  
  \begin{itemize}
    \item Someone \emph{will} die on the same day as their diabetes diagnosis,
      or any number of other overlaps.
    \item Be prepared to think through these cases.  
  \end{itemize}
\end{frame}


\begin{frame}[fragile]
  \frametitle{Last additions}
  \begin{itemize}
    \item \code{age1}, \code{age2}: age at start and end of interval
    \item \code{mcount}: number of metabolic conditions so far
    \item \code{mstate}: censor, 1mc, 2mc, 3mc, death
  \end{itemize}
<<row4g>>=
data1$age1 <- with(data1, age + tstart/365.25)
data1$age2 <- with(data1, age + tstop/365.25)
data1$mcount <- with(data1, diabetes + htn + dyslipid)
tcount <- with(data1, e1 + e2 + e3)
temp <- with(data1, ifelse(death, 4, 
              ifelse(tcount ==0, 0, mcount+ tcount)))
data1$mstate <- factor(temp, 0:4, 
         c("censored", "1mc", "2mc", "3mc", "death"))
with(data1, table(mcount, mstate))
@ 
\end{frame}

\begin{frame}
  \begin{itemize}
    \item Why so much time on the data? 
    \item Print out and READ selected subjects from the final result
    \item If the data set is right, all that follows is easy
    \item If it is wrong, the answers sometimes don't show it
  \end{itemize}
\end{frame}

\begin{frame}{Time scale}
  \begin{itemize}
    \item Time since diagnosis makes some sense for the NAFLD cases,
      but time since ``your number was chosen out of a hat'' for the
      controls?
      \begin{itemize}
        \item Age and sex need to be in the model, and they need to be 
          \emph{right}
        \item The population death rate ranges from .03--500 /1000 over
          this age span; a small lack of fit in the age*sex modeling 
          can dominate all other covariates.
      \end{itemize}
    \item Age as a time scale compares like with like; age is not in
      model.  We can also stratify on sex if desired.
    \item Time since index + case-control matching compares each subject
      to others of the same age and sex. 
  \end{itemize}
\end{frame}

\begin{frame}{2011 Minnesota death rates}
<<death>>=
matplot(20:100, survexp.mn[21:101, ,"2011"]*365000, type='l', lwd=2,
        col=2:1, log='y', xlab="Age", ylab= "Deaths/1000")
@ 
\end{frame}

\begin{frame}[fragile]{Fits}
<<mfit1, echo=TRUE, size="small">>=
nfit1 <- coxph(Surv(age1, age2, death) ~ male + nafld,
               data=data1)
nfit2 <- coxph(Surv(age1, age2, death) ~ male + nafld + mcount,
               data=data1)
nfit3 <- coxph(Surv(age1, age2, death) ~ male + 
                   strata(mcount)/nafld,  data= data1)
nfit4a <- coxph(Surv(age1, age2, mstate=="1mc") ~ male + nafld,
               data=data1, subset= (mcount==0))
nfit4b <- coxph(Surv(age1, age2, mstate=="2mc") ~ male + nafld,
               data=data1, subset= (mcount<2))
nfit4c <- coxph(Surv(age1, age2, mstate=="3mc") ~ male + nafld,
               data=data1, subset= (mcount<3))
@ 
\end{frame}

\begin{frame}[fragile]
<<mfit1b>>=
mtable <- matrix(NA, 11, 3)
dimnames(mtable) <- list(c("Alive -> Dead", "Alive -> Dead", "","0 MC -> Dead", 
                           "1 MC -> Dead", "2 MC -> Dead", "3 MC -> Dead", "",
                           "0 MC -> 1 MC", "1 MC -> 2 MC", "2 MC -> 3 MC"),
                         c("male sex", "NAFLD", "mcount"))
mtable[1, 1:2] <- coef(nfit1)
mtable[2, 1:3] <- coef(nfit2)
mtable[4:7,1:2] <- cbind(coef(nfit3)[1], coef(nfit3)[-1])
mtable[9:11, 1:2] <- rbind(coef(nfit4a), coef(nfit4b), coef(nfit4c))

print(round(exp(mtable), 1), na.print="")
@ 
  \begin{itemize}
    \item The incremental impact of NAFLD on death decreases
    \item The impact on conversion to the next comorbid state increases.
    \item (Allen adds these to figure 4.)
  \end{itemize}
\end{frame}

\begin{frame}{Other summaries}
  \begin{itemize}
    \item Hazard rates between states
    \item $p(t)$, state vector at time $t$
    \item Mean time in state
    \item Number of visits to each state
  \end{itemize}
\end{frame}

\begin{frame}{Predicting the future}
  \begin{itemize}
    \item When there are time-dependent covariates, how do you
    predict future outcomes?
    \item What do you want to predict?
      \begin{itemize}
        \item Outcome risk given baseline covariates, covariates do not change?
        \item Outcome risk given covariates, covariates evolve?
          \pause
      \end{itemize}
    \item Current smoker:
      \begin{itemize}
        \item risk of MI for this subject, if they continue smoking
        \item risk for a population of current smokers, knowing some
          will quit
      \end{itemize}
    \item What about systolic blood pressure?
  \end{itemize}
\end{frame}

\begin{frame}{Primary biliary cirrohsis}
  \begin{itemize}
    \item Progressive autoimmune disease
    \item Continual inflammation slowly creates scar tissue
    \item Time dependent risk score fits better
  \end{itemize}
\end{frame}

\begin{frame}{Primary biliary cirrohsis}
<<pbc>>=
pfit <- survfit(Surv(time, status==2) ~ edema, pbc)
plot(pfit, xscale=365.25, col=c(1,2,4), lwd=2,
     xlab="Years from study entry")
legend(3000, .9, paste0("Edema ", c(0, .5, 1), ", n= ",table(pbc$edema)), 
       col=c(1,2,4), lty=1, lwd=2, bty='n')
@ 
\end{frame}

\begin{frame}
<<pbc2>>=
tdata <- data.frame(bili=1, edema=0, age=51, albumin=3.5) 
fit1 <- coxph(Surv(time, status==2) ~  age + log(bili) + edema + 
              log(albumin), pbc, subset=(1:312))  # those with sequential data
pred1 <- survfit(fit1, newdata = tdata)

# create the time dependent version
p1 <- pbcseq[!duplicated(pbcseq$id),]
p2 <- tmerge(p1[, c("id", "age", "sex")], p1, id=id,
             death= event(futime, 1*(status==2)))
p2 <- tmerge(p2, pbcseq, id, bili= tdc(day, bili), 
             edema= tdc(day, edema), albumin= tdc(day, albumin))
fit2 <- coxph(Surv(tstart, tstop, death) ~ age + log(bili) +
              edema + log(albumin), p2)
pred2 <- survfit(fit2, newdata=tdata)
plot(pfit, xscale=365.25, col=c(1,2,4), lwd=2,
     xlab="Years from study entry")
#legend(3000, .9, paste0("Edema ", c(0, .5, 1), ", n= ",table(pbc$edema)), 
#       col=c(1,2,4), lty=1, lwd=2, bty='n')
lines(pred2, col=5)
lines(pred1, col=6, conf.int=FALSE)
@ 
\end{frame}

\begin{frame}{Choices}
  \begin{enumerate}
    \item Use only baseline values for the fit
      \begin{itemize}
        \item Survival given that baseline
        \item Subjects will evolve, and that gets built into the coefficients
          and the baseline hazard
        \item The PH assumption may be badly strained
      \end{itemize}
    \item ``Baseline'' values at future times (landmark analysis)
    \item Use time-dependent covariates for the fit
      \begin{enumerate}
        \item Predict for fixed covariates
        \item Create a covariate path (delicate)
        \item Use a population average
        \item Encode the path as states and refit
      \end{enumerate}
    \item Various bad ideas
  \end{enumerate}
\end{frame}

\begin{frame}[fragile]{Aalen-Johansen}
<<mfig1, echo=TRUE, error=TRUE>>=
istate <- factor(data1$mcount, 0:3, c('0mc', '1mc', '2mc', '3mc'))
mfig <- survfit(Surv(age1, age2, mstate) ~ nafld, data=data1,
                istate=istate, id=id, se=FALSE, start.time=50)
@ 
\end{frame}

\begin{frame}[fragile]
<<mfig2, echo=TRUE>>= 
fakeid <- data1$id + data1$nafld/2
mfig <- survfit(Surv(age1, age2, mstate) ~ nafld, data=data1,
                istate=istate, id=fakeid, se=FALSE, start.time=50)
print(mfig, digits=2)
@ 
\end{frame}

\begin{frame}
<<mfig3>>=
plot(mfig, lty=1:2, col=rep(c(3,5,4,1,2), each=2), yscale=100,
     xlab="Age", ylab="P(state)")
legend(55, .95, c("0 mc", "1 mc", "2 mc", "3 mc", "Dead"), lty=1, 
       lwd=2, col=c(2,3,5,4,1))
@ 
\end{frame}

\begin{frame}[fragile]{Mean years in state, starting at age 50}
<<mfig4>>=
tmat <- matrix(summary(mfig, rmean=100)$table[,"rmean"], 2, 5)
dimnames(tmat) <- list(c("Control", "NAFLD"), 
                       c("1 mc", "2 mc", "3 mc", "Death", "0 mc"))
t2 <- tmat[,c(5,1,2,3)]
t2 <- cbind(t2, Total =rowSums(t2))
round(t2, 1)
@ 

  \begin{itemize}
    \item This is the non-parametric form of 3.1, prediction for a control
    subject who does not switch from control to NAFLD. 
    
    \item For simple alive-dead, these curves are equivalent to 
    Simon and Makuch, Statistics in Medicine, 1984.
  \end{itemize}
\end{frame}


\begin{frame}{Method 1, baseline covariates}
  \begin{itemize}
    \item NAFLD subjects never(?) become non-NAFLD
    \item Control subjects need to have full follow-up
      \begin{itemize}
        \item Duplicate the joint NAFLD/control subjects
        \item \Sexpr{sum(nafld1$ntime > 0, na.rm=T)} out of \Sexpr{sum(nafld1$nafld)} cases
        \item The NAFLD copy starts later 
        \item AJ estimate: copy 2 needs a new id
      \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
<<data2>>=
data2 <- data1
data2$nafld <- data2$nafld[match(data2$id, data2$id)]  # no time dependent
tdata <- subset(data1, nafld==1 & ntime>0)
tdata$id <- tdata$id + .1
data2 <- rbind(data2, tdata)

istate2 <- factor(data2$mcount, 0:3, c('0mc', '1mc', '2mc', '3mc'))
mfig2 <- survfit(Surv(age1, age2, mstate) ~ nafld, data=data2,
                istate=istate2, id=id, se=FALSE, start.time=50)

temp <- matrix(summary(mfig2, rtime=100)$table[, "rmean"], 2, 5)
tmat2 <- rbind(Control2 = temp[1,], tmat)
t2 <- tmat2[,c(5,1,2,3)]
t2 <- cbind(t2, Total =rowSums(t2))
round(t2, 1)

i1 <- sum(nafld1$ntime > 0, na.rm=T) 
i2 <- table(nafld1$nafld)
@ 

\begin{itemize}
  \item \Sexpr{i1} out of \Sexpr{i2[1]} controls get a little more follow-up
  \item During that extra follow-up they are at higher risk
\end{itemize}
\end{frame}

\begin{frame}{Time in state, based on the fitted model}
  \begin{itemize}
    \item Simplest method is 3.1: time-dependent fit + prediction for static
      covariates
      \begin{enumerate}
        \item Fit the TD models for each state to state transition
          (\code{nfit3, nfit4a, nfit4b, nfit4c})
        \item For each model, get the predicted hazard functions
          $\lambda_{ij}(t$, control) and $\lambda_{ij}(t$, NAFLD)
        \item Compute Aalen-Johansen estimates using these values.
        \item Alternate: use the \code{mstate} package
      \end{enumerate}
    \item Better is method 1: time-fixed covariate fit + static prediction
      \begin{enumerate}
        \item Only use the baseline nafld value, or create the doubled 
          data set (full follow-up for controls that become cases)
        \item Cox model fits for each transition, robust variance if doubled
        \item Hazard estimates and AJ computation as before
      \end{enumerate}
    \item Better is method 3.3: time-dependent fit + population curves
      \begin{enumerate}
        \item Fit the TD models
        \item Predicted hazard curves for \emph{each covariate path} =
          334 for controls, only 1 for NAFLD; overall hazard for controls is
          a time-weighted average.
        \item Use these to compute Aalen-Johansen values
      \end{enumerate}
    \item variance - bootstrap
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
<<mfit4, echo=TRUE>>=
# method 1
tdata <- data1
tdata$nafld <- tdata$nafld[match(tdata$id, tdata$id)]  
agfit1 <- survfit(Surv(age1, age2, endpoint) ~ male + nafld, tdata,
                  id= id, istate= cstate, start.time=50)
dim(agfit1)
# plot(agfit1[1:2,-4], lty=1:2, col=rep(1:5, each=2))
rtime <- summary(agfit1, rtime=100)$table[,3]
rtime <- matrix(rtime, nrow(agfit1), ncol(agfit1))
@ 
\end{frame}

\begin{frame}
<<mfit4a>>=
oldpar <- par(mar=c(5.1, 7.1, 1, 1))
barplot(height= t(rtime[c(2,1,3,4), c(5,1,2,3)]), space=c(.1, .1, .3, .1),
        names.arg=c("F NAFLD", "F Control", "M Control", 
                    "M NAFLD"),
        legend= TRUE, horiz=TRUE, las=1,
        col= rainbow(5)[4:1], xlab="Years")
par(oldpar)
@ 
\end{frame}
